# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Ugly workaround to split out MMF and evaluator
# TODO: Reconsider helm chart structure and move things out after v0.8 release
{{- if index .Values "evaluator" "enabled" }}
kind: Service
apiVersion: v1
metadata:
  name: {{ include "openmatch.evaluator.hostName" . }}
  namespace: {{ .Release.Namespace }}
  annotations: {{- include "openmatch.chartmeta" . | nindent 4 }}
  labels:
    app: {{ template "openmatch.name" . }}
    component: evaluator
    release: {{ .Release.Name }}
spec:
  selector:
    app: {{ template "openmatch.name" . }}
    component: evaluator
    release: {{ .Release.Name }}
{{- $portType := coalesce .Values.global.kubernetes.service.portType .Values.evaluator.portType -}}
{{- if eq $portType "ClusterIP" }}
  clusterIP: None
{{- end }}
  type: {{ $portType }}
  ports:
  - name: grpc
    protocol: TCP
    port: {{ .Values.evaluator.grpcPort }}
  - name: http
    protocol: TCP
    port: {{ .Values.evaluator.httpPort }}
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: {{ include "openmatch.evaluator.hostName" . }}
  namespace: {{ .Release.Namespace }}
  annotations: {{- include "openmatch.chartmeta" . | nindent 4 }}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ include "openmatch.evaluator.hostName" . }}
  {{- include "openmatch.HorizontalPodAutoscaler.evaluator.spec.common" . | nindent 2 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "openmatch.evaluator.hostName" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "openmatch.name" . }}
    component: evaluator
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.evaluator.replicas }}
  selector:
    matchLabels:
      app: {{ template "openmatch.name" . }}
      component: evaluator
  template:
    metadata:
      namespace: {{ .Release.Namespace }}
      annotations:
        {{- include "prometheus.annotations" (dict "port" .Values.evaluator.httpPort "prometheus" .Values.global.telemetry.prometheus) | nindent 8 }}
        {{- include "openmatch.chartmeta" . | nindent 8 }}
        {{- if .Values.evaluator.podAnnotations }}
        {{- toYaml .Values.evaluator.podAnnotations | nindent 8 }}
        {{- end }}
      labels:
        app: {{ template "openmatch.name" . }}
        component: evaluator
        release: {{ .Release.Name }}
    spec:
      {{- include "openmatch.labels.nodegrouping" . | nindent 6 }}
      volumes:
        {{- include "openmatch.volumes.configs" (. | merge (dict "configs" .Values.evaluatorConfigs)) | nindent 8}}
        {{- include "openmatch.volumes.tls" . | nindent 8}}
      serviceAccountName: {{ include "openmatch.serviceAccount.name" . }}
      containers:
      - name: {{ include "openmatch.evaluator.hostName" . }}
        volumeMounts:
          {{- include "openmatch.volumemounts.configs" (dict "configs" .Values.evaluatorConfigs) | nindent 10 }}
          {{- include "openmatch.volumemounts.tls" . | nindent 10 }}
        image: "{{ .Values.global.image.registry }}/{{ .Values.evaluator.image}}:{{ .Values.global.image.tag }}"
        ports:
        - name: grpc
          containerPort: {{ .Values.evaluator.grpcPort }}
        - name: http
          containerPort: {{ .Values.evaluator.httpPort }}
        {{- include "openmatch.container.common" . | nindent 8 }}
{{- end }}

